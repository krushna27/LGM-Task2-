{"ast":null,"code":"var _jsxFileName = \"O:\\\\react app\\\\reactapp1\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // react work on control components \n// onchange only work on input type\n// we cann give same event more time\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // we can pass a object inside the useState (call function  inside it)\n  const [fullname, setfullname] = useState({\n    firstname: \"\",\n    lastname: \"\"\n  }); // this is for name\n  // const[lastname , setlastname] = useState(\"\");// this is for last name\n  // const [fullname , setfullname] = useState(\"\"); // this is for fullname which display after clicking on button\n  // const [fullname2 , setfullname2] = useState(\"\");\n\n  const inputevent = event => {\n    console.log(event.target.value); // show a name(word)value one by one in console\n\n    console.log(event.target.name); // show name attribute \n\n    const value = event.target.value;\n    const name = event.target.name;\n    setfullname(prevalue => {\n      // console.log( prevalue);\n      if (name === 'firstname') {\n        return {\n          firstname: value,\n          lastname: prevalue.lastname\n        };\n      } else if (name === 'lastname') {\n        return {\n          firstname: prevalue.firstname,\n          lastname: value\n        };\n      }\n    });\n  }; // const inputevent1 = (event) => {\n  // setlastname(event.target.value);\n  // }\n\n\n  const onsubmit = event => {\n    event.preventDefault();\n    alert(\"form is submitted\"); //it prevent it default behavior(in shor we dont want default )that why he dont refresh page \n    // setfullname(name);\n    // setfullname2(lastname);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onsubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Hello \", fullname.firstname, \" \", \" \", \" \", fullname.lastname, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter name\",\n          onChange: inputevent,\n          value: fullname.firstname,\n          name: \"firstname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter lastname\",\n          onChange: inputevent,\n          value: fullname.lastname,\n          name: \"lastname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Enter email\",\n          onChange: inputevent,\n          value: fullname.email,\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"phone\",\n          placeholder: \"Enter phone no\",\n          onChange: inputevent,\n          value: fullname.phone,\n          name: \"phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"click me \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"FnssVFvWwlH7UY5w+85/J03iGvc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["O:/react app/reactapp1/src/App.jsx"],"names":["React","useState","App","fullname","setfullname","firstname","lastname","inputevent","event","console","log","target","value","name","prevalue","onsubmit","preventDefault","alert","email","phone"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\n// react work on control components \r\n// onchange only work on input type\r\n// we cann give same event more time\r\nconst App = () => {\r\n\r\n\r\n    // we can pass a object inside the useState (call function  inside it)\r\n\r\n    const [fullname, setfullname] = useState({\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n    }\r\n    ); // this is for name\r\n\r\n    // const[lastname , setlastname] = useState(\"\");// this is for last name\r\n\r\n    // const [fullname , setfullname] = useState(\"\"); // this is for fullname which display after clicking on button\r\n\r\n    // const [fullname2 , setfullname2] = useState(\"\");\r\n\r\n    const inputevent = (event) => {\r\n        console.log(event.target.value);// show a name(word)value one by one in console\r\n        console.log(event.target.name); // show name attribute \r\n\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n\r\n        setfullname((prevalue) => {\r\n            // console.log( prevalue);\r\n            if (name === 'firstname') {\r\n                return {\r\n                    firstname: value,\r\n                    lastname: prevalue.lastname,\r\n\r\n                };\r\n            } else\r\n                if (name === 'lastname') {\r\n                    return {\r\n                        firstname: prevalue.firstname,\r\n                        lastname: value,\r\n\r\n                    };\r\n                }\r\n\r\n        });\r\n    };\r\n\r\n    // const inputevent1 = (event) => {\r\n    // setlastname(event.target.value);\r\n    // }\r\n\r\n    const onsubmit = (event) => {\r\n        event.preventDefault();\r\n        alert(\"form is submitted\");\r\n        //it prevent it default behavior(in shor we dont want default )that why he dont refresh page \r\n        // setfullname(name);\r\n        // setfullname2(lastname);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onsubmit}>\r\n                <div>\r\n                    <h1>Hello {fullname.firstname} {\" \"} {fullname.lastname} </h1>\r\n\r\n                    <input type=\"text\" placeholder=\"Enter name\" onChange={inputevent}\r\n                        value={fullname.firstname}\r\n                        name=\"firstname\"\r\n                    />\r\n                    <br />\r\n\r\n                    <input type=\"text\" placeholder=\"Enter lastname\" onChange={inputevent}\r\n                        value={fullname.lastname}\r\n                        name=\"lastname\"\r\n                    />\r\n\r\n\r\n                    <input type=\"email\" placeholder=\"Enter email\" onChange={inputevent}\r\n                        value={fullname.email}\r\n                        name=\"email\"\r\n                    />\r\n\r\n\r\n                    <input type=\"phone\" placeholder=\"Enter phone no\" onChange={inputevent}\r\n                        value={fullname.phone}\r\n                        name=\"phone\"\r\n                    />\r\n\r\n                    <button type=\"submit\">click me </button>\r\n                </div>\r\n            </form>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}