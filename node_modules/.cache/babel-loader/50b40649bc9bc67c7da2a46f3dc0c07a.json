{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KRUSHNA\\\\Desktop\\\\react app\\\\reactapp1\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react'; //useState : in react usestate is know as hook \n// array destructuring : = this means that cut the array in small small bits to use it in simple way \n//example: const arrname =['vi,'ki','kio'] ; this is array of name arrname .. if we have to acces first valeu\n// of arrname array => name[0] acces by index no. \n// using destructring : const [value1 , value2 , value3] = arrname; here the value is store inside the\n// value1,2,3 variable .. whwn we want acces value we have to only pass variable name ( name1 = vi )\n// name1 is in arrname array  so vi in assign to name1 varaible ..\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const state = useState(); //  when we use usestate we get an array which return 2 value 1st(undefined)\n  //and 2nd(function)  .. 1st value is current data and 2nd value is updateed function or data  \n  //(when we give a value inside the usestate which is known as inital data )\n  //console.log(state);\n\n  const [count] = useState(4); // this is same as destruturing ('usestate()' is an arrray inside this we pass \n  // count as array elemnt ... \n\n  const InNum = () => {\n    console.log(\"button is clicked\" + count++);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: InNum,\n      children: \"click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"3Zty8ZA8yChV0dVEgDZ+jXH4OFk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/KRUSHNA/Desktop/react app/reactapp1/src/App.jsx"],"names":["React","useState","App","state","count","InNum","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CACA;AAGC;AACA;AACA;AACA;AACA;AACA;;;;;AACD,MAAMC,GAAG,GAAE,MAAK;AAAA;;AAGhB,QAAMC,KAAK,GAAGF,QAAQ,EAAtB,CAHgB,CAGU;AAC1B;AACA;AACA;;AAEA,QAAK,CAACG,KAAD,IAAUH,QAAQ,CAAC,CAAD,CAAvB,CARgB,CAQY;AAC5B;;AAEA,QAAMI,KAAK,GAAG,MAAI;AAElBC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBH,KAAK,EAAvC;AACC,GAHD;;AAMA,sBACI;AAAA,4BACA;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAQ,MAAA,OAAO,EAAEC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADJ;AASC,CA1BD;;GAAMH,G;;KAAAA,G;AA2BN,eAAeA,GAAf","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\n//useState : in react usestate is know as hook \r\n\r\n\r\n // array destructuring : = this means that cut the array in small small bits to use it in simple way \r\n //example: const arrname =['vi,'ki','kio'] ; this is array of name arrname .. if we have to acces first valeu\r\n // of arrname array => name[0] acces by index no. \r\n // using destructring : const [value1 , value2 , value3] = arrname; here the value is store inside the\r\n // value1,2,3 variable .. whwn we want acces value we have to only pass variable name ( name1 = vi )\r\n // name1 is in arrname array  so vi in assign to name1 varaible ..\r\nconst App= ()=> {\r\n    \r\n \r\nconst state = useState(); //  when we use usestate we get an array which return 2 value 1st(undefined)\r\n//and 2nd(function)  .. 1st value is current data and 2nd value is updateed function or data  \r\n//(when we give a value inside the usestate which is known as inital data )\r\n//console.log(state);\r\n\r\nconst[count] = useState(4); // this is same as destruturing ('usestate()' is an arrray inside this we pass \r\n// count as array elemnt ... \r\n\r\nconst InNum = ()=>{\r\n\r\nconsole.log(\"button is clicked\" + count++);\r\n};\r\n\r\n\r\nreturn(\r\n    <>\r\n    <h1>{count}</h1>\r\n    <button onClick={InNum} >click me</button>\r\n    </>\r\n\r\n\r\n);\r\n\r\n};\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}