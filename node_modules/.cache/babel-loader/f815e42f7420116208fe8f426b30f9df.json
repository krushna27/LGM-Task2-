{"ast":null,"code":"var _jsxFileName = \"O:\\\\react app\\\\reactapp1\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // onchange only work on input type\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [name, setname] = useState(\"\"); // this is for name\n\n  const [fullname, setfullname] = useState(); // this is for fullname which display after clicking on button\n\n  const [lastname, setlastname] = useState(\"\"); // this is for last name\n\n  const inputevent = event => {\n    console.log(event.target.value); // show a name value one by one\n\n    setname(event.target.value);\n  };\n\n  const onsubmit = event => {\n    event.preventDefault(); //it prevent it default behavior(in shor we dont want default )that why he dont refresh page \n\n    setfullname(name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onsubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Hello \", fullname, \"\\uD83D\\uDE0E \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter name\",\n          onChange: inputevent,\n          value: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter lastname\",\n          onChange: inputevent1,\n          value: lastname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"click me \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"BtqBIK1Q7MWbf48gABjkV+G+NHo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["O:/react app/reactapp1/src/App.jsx"],"names":["React","useState","App","name","setname","fullname","setfullname","lastname","setlastname","inputevent","event","console","log","target","value","onsubmit","preventDefault","inputevent1"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;;;;AACA,MAAMC,GAAG,GAAG,MAAI;AAAA;;AAEhB,QAAM,CAACC,IAAD,EAAQC,OAAR,IAAmBH,QAAQ,CAAC,EAAD,CAAjC,CAFgB,CAEuB;;AACvC,QAAM,CAACI,QAAD,EAAYC,WAAZ,IAA2BL,QAAQ,EAAzC,CAHgB,CAG6B;;AAC7C,QAAK,CAACM,QAAD,EAAYC,WAAZ,IAA2BP,QAAQ,CAAC,EAAD,CAAxC,CAJgB,CAI6B;;AAG7C,QAAMQ,UAAU,GAAIC,KAAD,IAAU;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB,EADyB,CACO;;AAChCV,IAAAA,OAAO,CAACM,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAP;AACH,GAHD;;AAMA,QAAMC,QAAQ,GAAIL,KAAD,IAAU;AAC3BA,IAAAA,KAAK,CAACM,cAAN,GAD2B,CAE3B;;AACIV,IAAAA,WAAW,CAACH,IAAD,CAAX;AACH,GAJD;;AAOI,sBACA;AAAA,2BACA;AAAM,MAAA,QAAQ,EAAEY,QAAhB;AAAA,6BACA;AAAA,gCACA;AAAA,+BAAWV,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,YAA/B;AAA6C,UAAA,QAAQ,EAAEI,UAAvD;AACA,UAAA,KAAK,EAAEN;AADP;AAAA;AAAA;AAAA;AAAA,gBAFA,eAKA;AAAA;AAAA;AAAA;AAAA,gBALA,eAOA;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,gBAA/B;AAAiD,UAAA,QAAQ,EAAEc,WAA3D;AACA,UAAA,KAAK,EAAEV;AADP;AAAA;AAAA;AAAA;AAAA,gBAPA,eASA;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA,mBADA;AAkBH,CAtCD;;GAAML,G;;KAAAA,G;AAyCN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\n// onchange only work on input type\r\nconst App = ()=>{\r\n\r\nconst [name , setname] = useState(\"\"); // this is for name\r\nconst [fullname , setfullname] = useState(); // this is for fullname which display after clicking on button\r\nconst[lastname , setlastname] = useState(\"\");// this is for last name\r\n\r\n\r\nconst inputevent = (event) =>{\r\n    console.log(event.target.value);// show a name value one by one\r\n    setname(event.target.value);\r\n};\r\n\r\n\r\nconst onsubmit = (event) =>{\r\nevent.preventDefault();\r\n//it prevent it default behavior(in shor we dont want default )that why he dont refresh page \r\n    setfullname(name);\r\n};\r\n\r\n\r\n    return(\r\n    <>\r\n    <form onSubmit={onsubmit}>\r\n    <div>\r\n    <h1>Hello {fullname}ðŸ˜Ž </h1>        \r\n    <input type=\"text\" placeholder=\"Enter name\"  onChange={inputevent}\r\n    value={name}/>\r\n\r\n    <br />\r\n\r\n    <input type=\"text\" placeholder=\"Enter lastname\"  onChange={inputevent1}\r\n    value={lastname}/>\r\n    <button type=\"submit\">click me </button>\r\n    </div>\r\n    </form>\r\n\r\n    </>\r\n    );\r\n};\r\n\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}