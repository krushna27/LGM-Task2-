{"ast":null,"code":"var _jsxFileName = \"O:\\\\react app\\\\reactapp1\\\\src\\\\App.jsx\";\nimport React, { createContext, useState } from 'react';\nimport Context1 from \"./Context1\"; // import Todolist from './Todolist';\n// import \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Firstname = /*#__PURE__*/createContext(); // this is context . in this way we create context\n// we have to pass context as a components \n// and always pass other components inside the context \n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Firstname.Provider, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(Context1, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 24\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["O:/react app/reactapp1/src/App.jsx"],"names":["React","createContext","useState","Context1","Firstname","App"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CACA;AACA;;;;AAEA,MAAMC,SAAS,gBAAGH,aAAa,EAA/B,C,CAAmC;AACnC;AACA;;AACA,MAAMI,GAAG,GAAG,MAAI;AAEhB,sBACG;AAAA,2BACD,QAAC,SAAD,CAAW,QAAX;AAAA,mCAAqB,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AADC,mBADH;AAOC,CATD;;KAAMA,G;AAYN,eAAeA,GAAf","sourcesContent":["\r\nimport React, { createContext, useState } from 'react';\r\nimport Context1 from \"./Context1\";\r\n// import Todolist from './Todolist';\r\n// import \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst Firstname = createContext(); // this is context . in this way we create context\r\n// we have to pass context as a components \r\n// and always pass other components inside the context \r\nconst App = ()=>{\r\n\r\nreturn (\r\n   <>\r\n  <Firstname.Provider> <Context1/>  </Firstname.Provider>   \r\n   </>\r\n   );\r\n\r\n\r\n};\r\n\r\n\r\nexport default App;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}