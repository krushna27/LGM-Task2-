{"ast":null,"code":"var _jsxFileName = \"O:\\\\react app\\\\reactapp1\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // import { useState } from 'react';\n// //useState : in react usestate is know as hook \n//  // array destructuring : = this means that cut the array in small small bits to use it in simple way \n//  //example: const arrname =['vi,'ki','kio'] ; this is array of name arrname .. if we have to acces first valeu\n//  // of arrname array => name[0] acces by index no. \n//  // using destructring : const [value1 , value2 , value3] = arrname; here the value is store inside the\n//  // value1,2,3 variable .. whwn we want acces value we have to only pass variable name ( name1 = vi )\n//  // name1 is in arrname array  so vi in assign to name1 varaible ..\n// const App= ()=> {\n// const state = useState(); //  when we use usestate we get an array which return 2 value 1st(undefined)\n// //and 2nd(function)  .. 1st value is current data and 2nd value is updateed function or data  \n// //(when we give a value inside the usestate which is known as inital data )\n// //console.log(state);\n// const[count,setCount] = useState(0); // this is same as destruturing ('usestate()' is an arrray inside this we pass \n// // count as array elemnt ... \n// const InNum = ()=>{\n// setCount(count +1);\n// };\n// return(\n//     <>\n//     <h1>{count}</h1>\n//     <button onClick={InNum} >click me</button>\n//     </>\n// );\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const time = new Date().toLocaleTimeString(); //array destructring\n\n  const [currenttime, settingTime] = useState(time);\n\n  const updatetime = () => {\n    time1 = new Date().toLocaleTimeString();\n    settingTime(time1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: currenttime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updatetime,\n      children: \"click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"OcBsrhURTNdg4vj2PycysMS8Y24=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["O:/react app/reactapp1/src/App.jsx"],"names":["React","useState","App","time","Date","toLocaleTimeString","currenttime","settingTime","updatetime","time1"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AAMA;AACA;AACA;AACA;AACA;AAGA;;;;;AAUA,MAAMC,GAAG,GAAG,MAAK;AAAA;;AAEjB,QAAMC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,EAAb,CAFiB,CAIjB;;AACA,QAAK,CAACC,WAAD,EAAcC,WAAd,IAA6BN,QAAQ,CAACE,IAAD,CAA1C;;AAEA,QAAMK,UAAU,GAAG,MAAM;AACrBC,IAAAA,KAAK,GAAG,IAAIL,IAAJ,GAAWC,kBAAX,EAAR;AACAE,IAAAA,WAAW,CAACE,KAAD,CAAX;AACH,GAHD;;AAKA,sBACA;AAAA,4BACA;AAAA,gBAAKH;AAAL;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAQ,MAAA,OAAO,EAAEE,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADA;AAOC,CAnBD;;GAAMN,G;;KAAAA,G;AA2CN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\r\n// import { useState } from 'react';\r\n// //useState : in react usestate is know as hook \r\n\r\n\r\n//  // array destructuring : = this means that cut the array in small small bits to use it in simple way \r\n//  //example: const arrname =['vi,'ki','kio'] ; this is array of name arrname .. if we have to acces first valeu\r\n//  // of arrname array => name[0] acces by index no. \r\n//  // using destructring : const [value1 , value2 , value3] = arrname; here the value is store inside the\r\n//  // value1,2,3 variable .. whwn we want acces value we have to only pass variable name ( name1 = vi )\r\n//  // name1 is in arrname array  so vi in assign to name1 varaible ..\r\n// const App= ()=> {\r\n    \r\n \r\n// const state = useState(); //  when we use usestate we get an array which return 2 value 1st(undefined)\r\n// //and 2nd(function)  .. 1st value is current data and 2nd value is updateed function or data  \r\n// //(when we give a value inside the usestate which is known as inital data )\r\n\r\n// //console.log(state);\r\n\r\n// const[count,setCount] = useState(0); // this is same as destruturing ('usestate()' is an arrray inside this we pass \r\n// // count as array elemnt ... \r\n\r\n// const InNum = ()=>{\r\n// setCount(count +1);\r\n\r\n// };\r\n\r\n\r\n\r\n\r\n\r\n// return(\r\n//     <>\r\n//     <h1>{count}</h1>\r\n//     <button onClick={InNum} >click me</button>\r\n//     </>\r\n\r\n\r\n// );\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst App = () =>{\r\n\r\nconst time = new Date().toLocaleTimeString();\r\n\r\n//array destructring\r\nconst[currenttime, settingTime] = useState(time);\r\n\r\nconst updatetime = () => {\r\n    time1 = new Date().toLocaleTimeString();\r\n    settingTime(time1);\r\n};\r\n\r\nreturn(\r\n<>\r\n<h1>{currenttime}</h1>\r\n<button onClick={updatetime}>click me</button>\r\n</>\r\n\r\n)\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}